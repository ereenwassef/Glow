@model Glow.Models.offer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "offers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>offer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.offername_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offername_Ar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offername_Ar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offername, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offertitle_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offertitle_Ar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offertitle_Ar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offertitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offertitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offertitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offercontent_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offercontent_Ar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offercontent_Ar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offercontent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offercontent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offercontent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offerImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input multiple type="file" value="Choose image" name="namefile" onchange="show(this)" />
                <img id="user_img"   style="border:solid ; width:30% ; height:30%" />

                @*@Html.EditorFor(model => model.offerImage, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.offerImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

            function show(input) {
                if (input.files && input.files[0]) {
                    var filerdr = new FileReader();
                    filerdr.onload = function (e) {
                        $('#user_img').attr('src', e.target.result);
                    }
                    filerdr.readAsDataURL(input.files[0]);
                }
            }
</script>